
When you see:
1. Dependencies (A needs B)
2. Connections between items
3. Directional relationships
4. Need to find paths/order

Think Graph!

Joint (Connected AND Directed):
    4
   ↙ ↘
  1   2   All courses connected
   ↘ ↙    through dependencies
    3

Cyclical (Creates Impossible Schedule):
1 → 2
↑   ↓     Can't start anywhere!
3 ←       (Impossible to complete)

Key Concerns:
Direction matters (prerequisites)
Cycles make schedule impossible
Can have multiple independent groups
Need to handle all these cases!
This is why it's a graph problem!

2 ways to view:

	1. Prerequisites List (What I Need):

prereqs = {
    1: [4],    # To take course 1, need course 4
    2: [4],    # To take course 2, need course 4
    3: [1,2],  # To take course 3, need courses 1 and 2
    4: []      # Course 4 has no prerequisites
}

Visual:
       4
     ↙ ↘      Arrows point FROM prerequisite
    1   2     TO the course that needs it
     ↘ ↙
       3
	
	2. Dependency List (Who Needs Me):
	
depends = {
    1: [3],    # Course 1 is needed by course 3
    2: [3],    # Course 2 is needed by course 3
    3: [],     # Course 3 isn't needed by anyone
    4: [1,2]   # Course 4 is needed by courses 1 and 2
}

Visual: (same graph, different perspective)
       4
     ↗ ↖      Arrows point FROM course
    1   2     TO courses that depend on it
     ↗ ↖
       3


Cycle Detection:
	Two main ways:
	1. DFS with visited set
	2. Topological Sort